import math
from abc import ABC, abstractmethod

class Base(ABC):
    def __init__(self, data, result):
        self.data = data
        self.result = result

    @abstractmethod
    def get_answer(self):
        pass

    @abstractmethod
    def get_score(self):
        pass

    @abstractmethod
    def get_loss(self):
        pass


class A(Base):
    def get_answer(self):
        return [int(x >= 0.5) for x in self.data]

    def get_score(self):
        ans = self.get_answer()
        return sum(int(x == y) for (x, y) in zip(ans, self.result)) / len(ans)

    def get_loss(self):
        return sum((x - y) ** 2 for (x, y) in zip(self.data, self.result))


class B(Base):
    def get_answer(self):
        return [int(x >= 0.5) for x in self.data]

    def get_loss(self):
        return -sum(y * math.log(x) + (1 - y) * math.log(1 - x) for (x, y) in zip(self.data, self.result))

    def get_score(self):
        ans = self.get_answer()
        return sum(int(x == y) for (x, y) in zip(ans, self.result)) / len(ans)

    def get_pre(self):
        ans = self.get_answer()
        true_positives = sum(1 for (x, y) in zip(ans, self.result) if x == 1 and y == 1)
        predicted_positives = sum(ans)
        return true_positives / predicted_positives if predicted_positives > 0 else 0

    def get_rec(self):
        ans = self.get_answer()
        true_positives = sum(1 for (x, y) in zip(ans, self.result) if x == 1 and y == 1)
        actual_positives = sum(self.result)
        return true_positives / actual_positives if actual_positives > 0 else 0


# Пример использования классов A и B
data = [0.1, 0.8, 0.6, 0.3, 0.7]  # Пример данных
result = [0, 1, 1, 0, 1]           # Ожидаемые результаты

obj_a = A(data, result)
print("Класс A:")
print("Ответы:", obj_a.get_answer())
print("Оценка:", obj_a.get_score())
print("Потери:", obj_a.get_loss())

obj_b = B(data, result)
print("\nКласс B:")
print("Ответы:", obj_b.get_answer())
print("Оценка:", obj_b.get_score())
print("Потери:", obj_b.get_loss())
print("Точность:", obj_b.get_pre())
print("Полнота:", obj_b.get_rec())
